name: Update Repositories
run-name: Update directories action started by ${{ github.actor }}

on:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash --noprofile --norc -exo pipefail {0}

jobs:
  get-repos:
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.get-repos.outputs.repos }}
    steps:
      - name: Checkout actions repository
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_SECRET }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Get template-project repositories
        id: get-repos
        run: |
          PAGE=1
          PER_PAGE=100
          REPOSITORIES=""
          while true; do
            REPOS_PAGE=$(curl -s -H "Authorization: token ${{ secrets.GIT_TOKEN }}" "https://api.github.com/user/repos?per_page=$PER_PAGE&page=$PAGE" | jq -r '.[] | select(.name | contains("template-project")) | .ssh_url')
            if [ -z "$REPOS_PAGE" ]; then
              break
            fi
            REPOSITORIES="$REPOSITORIES$REPOS_PAGE"$'\n'
            PAGE=$((PAGE+1))
          done
          REPOSITORIES_JSON=$(echo "$REPOSITORIES" | jq -cRs 'split("\n") | .[:-1]')
          echo "repos=$REPOSITORIES_JSON" >> "$GITHUB_ENV"
          echo "repos=$REPOSITORIES_JSON" >> "$GITHUB_OUTPUT"

  update-repo:
    needs: get-repos
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: ${{ fromJson(needs.get-repos.outputs.repos) }}
    steps:
      - name: Checkout actions repository
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_SECRET }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Set up Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "bot"

      - name: Process repository
        id: process-repo
        run: |
          repo=${{ matrix.repo }}
          echo "Processing repository $repo"
            echo "Cloning repository $repo"
            git clone $repo cloned -b develop

            if [ ! -d "cloned/.github/workflows" ]; then
              echo "Creating .github/workflows directory in cloned repository"
              mkdir -p cloned/.github/workflows
            fi

            echo "Copying workflows to cloned repository"
            cp -r .github/actions/* cloned/.github/workflows

            cd cloned
            git add .
            git status
            if ! git diff --cached --quiet --exit-code; then
              echo "Committing and pushing changes to $repo"
              git commit -m "build(github): bot update repository workflows"
              git push
              git pull
              git rebase origin/main
              git push --force-with-lease
            else
              echo "No changes detected by git diff --cached"
            fi
            cd ..
            rm -rf cloned
